#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë—ã—Å—Ç—Ä–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–∞—Ö –∑–∞–≤—Ç—Ä–∞ –≤ 22:00
"""

import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from final_monitor import FinalTennisMonitor

def quick_demo():
    """
    –ë—ã—Å—Ç—Ä–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–∞—Ö –∑–∞–≤—Ç—Ä–∞ –≤ 22:00
    """
    
    print("üéæ –ë–´–°–¢–†–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø")
    print("=" * 60)
    print("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–∞—Ö –∑–∞–≤—Ç—Ä–∞ –≤ 22:00")
    print("=" * 60)
    
    monitor = FinalTennisMonitor()
    tomorrow = (datetime.now() + timedelta(days=1)).strftime('%Y-%m-%d')
    
    print(f"üìÖ –î–∞—Ç–∞: {tomorrow}")
    print(f"üèüÔ∏è –¢–∏–ø –∫–æ—Ä—Ç–∞: –ì—Ä—É–Ω—Ç")
    print(f"‚è∞ –í—Ä–µ–º—è: 22:00-23:00")
    
    try:
        slots = monitor.get_tomorrow_slots()
        
        if not slots:
            print("\n‚ùå –°–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
        
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(slots)} —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –≥—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤ 22:00
        ground_slots_22h = []
        for slot in slots:
            if ("–ì—Ä—É–Ω—Ç" in slot.get('court_type', '') and 
                slot.get('time_from') == '22'):
                ground_slots_22h.append(slot)
        
        print(f"üèüÔ∏è –ì—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤ 22:00: {len(ground_slots_22h)} —Å–ª–æ—Ç–æ–≤")
        
        if ground_slots_22h:
            print("\nüì± –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –í TELEGRAM:")
            print("=" * 50)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤ Telegram
            message = f"üéæ <b>–°–≤–æ–±–æ–¥–Ω—ã–µ —Ç–µ–Ω–Ω–∏—Å–Ω—ã–µ –∫–æ—Ä—Ç—ã</b>\n"
            message += f"üìÖ –î–∞—Ç–∞: {tomorrow}\n"
            message += f"üèüÔ∏è –¢–∏–ø –∫–æ—Ä—Ç–∞: –ì—Ä—É–Ω—Ç\n"
            message += f"‚è∞ –í—Ä–µ–º—è: 22:00-23:00\n"
            message += f"‚úÖ –ù–∞–π–¥–µ–Ω–æ: {len(ground_slots_22h)} —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤\n\n"
            
            message += f"‚è∞ <b>22-23</b>\n"
            for slot in ground_slots_22h:
                message += f"  üèüÔ∏è {slot['court_type']} (–ö–æ—Ä—Ç ‚Ññ{slot['court_number']})\n"
            
            message += "\nüîó <a href='https://x19.spb.ru/bronirovanie/'>–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å</a>"
            
            print(message)
            
            print("\n" + "=" * 50)
            print("‚úÖ –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ì–û–¢–û–í–û –ö –û–¢–ü–†–ê–í–ö–ï!")
            
        else:
            print("\n‚ùå –°–≤–æ–±–æ–¥–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤ –≤ 22:00 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–∏–∂–∞–π—à–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
            print("\nüîç –ë–õ–ò–ñ–ê–ô–®–ò–ï –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–´:")
            
            # –ò—â–µ–º –≥—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤ –≤–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è
            evening_times = ['21', '22', '23']
            for time_slot in evening_times:
                count = len([slot for slot in slots 
                           if "–ì—Ä—É–Ω—Ç" in slot.get('court_type', '') 
                           and slot.get('time_from') == time_slot])
                if count > 0:
                    print(f"  ‚è∞ {time_slot}:00-{int(time_slot)+1}:00 - {count} –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤")
            
            # –ï—Å–ª–∏ –Ω–µ—Ç –≤–µ—á–µ—Ä–Ω–∏—Ö, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª—é–±—ã–µ –≥—Ä—É–Ω—Ç–æ–≤—ã–µ
            ground_slots = [slot for slot in slots if "–ì—Ä—É–Ω—Ç" in slot.get('court_type', '')]
            if ground_slots:
                print(f"\nüèüÔ∏è –í—Å–µ–≥–æ –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤: {len(ground_slots)}")
                
                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
                time_groups = {}
                for slot in ground_slots:
                    time_key = f"{slot['time_from']}-{slot['time_to']}"
                    if time_key not in time_groups:
                        time_groups[time_key] = 0
                    time_groups[time_key] += 1
                
                print("üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞:")
                for time_range, count in sorted(time_groups.items()):
                    print(f"  ‚è∞ {time_range}: {count} –∫–æ—Ä—Ç–æ–≤")
        
        print("\n" + "=" * 60)
        print("üí° –î–õ–Ø –ù–ê–°–¢–†–û–ô–ö–ò TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather –≤ Telegram")
        print("2. –ü–æ–ª—É—á–∏—Ç–µ Chat ID —á–µ—Ä–µ–∑ @userinfobot")
        print("3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª telegram_config.json")
        print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python send_telegram_notification.py")
        print("=" * 60)
        
    except Exception as e:
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    quick_demo()
