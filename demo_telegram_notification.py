#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
"""

import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from final_monitor import FinalTennisMonitor

def demo_telegram_notification():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≥–æ, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
    """
    
    print("üéæ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    print("=" * 60)
    print("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö")
    print("–≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–∞—Ö –∑–∞–≤—Ç—Ä–∞ –≤ 22:00")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–Ω–∏—Ç–æ—Ä
    monitor = FinalTennisMonitor()
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–µ —Å–ª–æ—Ç—ã
    tomorrow = datetime.now() + timedelta(days=1)
    tomorrow_str = tomorrow.strftime('%Y-%m-%d')
    
    print(f"\nüìÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞: {tomorrow_str}")
    
    try:
        slots = monitor.get_tomorrow_slots()
        
        if not slots:
            print("‚ùå –°–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(slots)} —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –≥—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤ 22:00
        ground_slots_22h = [slot for slot in slots 
                          if "–ì—Ä—É–Ω—Ç" in slot.get('court_type', '') 
                          and slot.get('time_from') == '22']
        
        print(f"\nüèüÔ∏è –ù–∞–π–¥–µ–Ω–æ {len(ground_slots_22h)} —Å–≤–æ–±–æ–¥–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤ –≤ 22:00")
        
        if ground_slots_22h:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            print("\nüì± –¢–ê–ö –í–´–ì–õ–Ø–î–ò–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –í TELEGRAM:")
            print("=" * 50)
            
            message = f"üéæ <b>–°–≤–æ–±–æ–¥–Ω—ã–µ —Ç–µ–Ω–Ω–∏—Å–Ω—ã–µ –∫–æ—Ä—Ç—ã</b>\n"
            message += f"üìÖ –î–∞—Ç–∞: {tomorrow_str}\n"
            message += f"üèüÔ∏è –¢–∏–ø –∫–æ—Ä—Ç–∞: –ì—Ä—É–Ω—Ç\n"
            message += f"‚è∞ –í—Ä–µ–º—è: 22\n"
            message += f"‚úÖ –ù–∞–π–¥–µ–Ω–æ: {len(ground_slots_22h)} —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤\n\n"
            
            message += f"‚è∞ <b>22-23</b>\n"
            for slot in ground_slots_22h:
                message += f"  üèüÔ∏è {slot['court_type']} (–ö–æ—Ä—Ç ‚Ññ{slot['court_number']})\n"
            
            message += "\nüîó <a href='https://x19.spb.ru/bronirovanie/'>–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å</a>"
            
            print(message)
            
            print("\n" + "=" * 50)
            print("üìã –î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–õ–û–¢–ê–•:")
            print("=" * 50)
            
            for i, slot in enumerate(ground_slots_22h, 1):
                print(f"{i:2d}. üèüÔ∏è {slot['court_type']} (–ö–æ—Ä—Ç ‚Ññ{slot['court_number']})")
                print(f"    ‚è∞ –í—Ä–µ–º—è: {slot['time_from']}-{slot['time_to']}")
                print(f"    üìÖ –î–∞—Ç–∞: {slot['date']}")
                print(f"    üÜî ID –∫–æ—Ä—Ç–∞: {slot['court_id']}")
                print()
            
            print("‚úÖ –í–°–ï –ì–û–¢–û–í–û –ö –û–¢–ü–†–ê–í–ö–ï –í TELEGRAM!")
            print("\nüí° –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:")
            print("1. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ —Ñ–∞–π–ª–µ TELEGRAM_SETUP.md")
            print("2. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather")
            print("3. –ü–æ–ª—É—á–∏—Ç–µ Chat ID —á–µ—Ä–µ–∑ @userinfobot")
            print("4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π–ª telegram_config.json")
            print("5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python send_telegram_notification.py")
            
        else:
            print("‚ùå –°–≤–æ–±–æ–¥–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤ –≤ 22:00 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
            print("\nüîç –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–´:")
            
            # –ì—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è
            ground_slots = [slot for slot in slots if "–ì—Ä—É–Ω—Ç" in slot.get('court_type', '')]
            if ground_slots:
                print(f"üèüÔ∏è –í—Å–µ–≥–æ –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤: {len(ground_slots)}")
                
                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
                time_groups = {}
                for slot in ground_slots:
                    time_key = f"{slot['time_from']}-{slot['time_to']}"
                    if time_key not in time_groups:
                        time_groups[time_key] = []
                    time_groups[time_key].append(slot)
                
                print("üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞ –¥–ª—è –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤:")
                for time_range, time_slots in sorted(time_groups.items()):
                    print(f"  ‚è∞ {time_range}: {len(time_slots)} –∫–æ—Ä—Ç–æ–≤")
            
            # –ë–ª–∏–∂–∞–π—à–∏–µ –∫ 22:00 –≤—Ä–µ–º–µ–Ω–∞
            evening_times = ['20', '21', '22', '23']
            evening_slots = []
            for time_slot in evening_times:
                evening_slots.extend([slot for slot in ground_slots 
                                    if slot.get('time_from') == time_slot])
            
            if evening_slots:
                print(f"\nüåÖ –ë–ª–∏–∂–∞–π—à–∏–µ –≤–µ—á–µ—Ä–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∞:")
                for time_slot in evening_times:
                    count = len([slot for slot in ground_slots 
                               if slot.get('time_from') == time_slot])
                    if count > 0:
                        print(f"  ‚è∞ {time_slot}:00 - {count} –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤")
            
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


def demo_all_notification_types():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    """
    
    print("\nüéæ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –í–°–ï–• –¢–ò–ü–û–í –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    print("=" * 60)
    
    monitor = FinalTennisMonitor()
    tomorrow = (datetime.now() + timedelta(days=1)).strftime('%Y-%m-%d')
    
    try:
        slots = monitor.get_tomorrow_slots()
        
        if not slots:
            print("‚ùå –°–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
        filters = [
            {"name": "–ì—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤ 22:00", "court_type": "–ì—Ä—É–Ω—Ç", "time": "22"},
            {"name": "–•–∞—Ä–¥–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤ 19:00", "court_type": "–•–∞—Ä–¥", "time": "19"},
            {"name": "–í—Å–µ –∫–æ—Ä—Ç—ã –≤ 20:00", "court_type": None, "time": "20"},
            {"name": "–ì—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤–µ—Å—å –¥–µ–Ω—å", "court_type": "–ì—Ä—É–Ω—Ç", "time": None},
        ]
        
        for filter_info in filters:
            print(f"\nüìã {filter_info['name']}:")
            print("-" * 40)
            
            filtered_slots = slots.copy()
            
            if filter_info['court_type']:
                filtered_slots = [slot for slot in filtered_slots 
                                if filter_info['court_type'] in slot.get('court_type', '')]
            
            if filter_info['time']:
                filtered_slots = [slot for slot in filtered_slots 
                                if slot.get('time_from') == filter_info['time']]
            
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ: {len(filtered_slots)} —Å–ª–æ—Ç–æ–≤")
            
            if filtered_slots:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å–ª–æ—Ç–æ–≤
                for i, slot in enumerate(filtered_slots[:5], 1):
                    print(f"  {i}. {slot['time_from']}-{slot['time_to']} - {slot['court_type']} (–ö–æ—Ä—Ç ‚Ññ{slot['court_number']})")
                
                if len(filtered_slots) > 5:
                    print(f"  ... –∏ –µ—â–µ {len(filtered_slots) - 5} —Å–ª–æ—Ç–æ–≤")
    
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    demo_telegram_notification()
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    
    demo_all_notification_types()
    
    print("\n" + "=" * 60)
    print("üéæ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("=" * 60)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nüõë –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
