#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
"""

import subprocess
import os
import time
from datetime import datetime

def start_monitoring():
    """–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"""
    print("üöÄ –ó–ê–ü–£–°–ö –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    try:
        result = subprocess.run(['ps', 'aux'], capture_output=True, text=True)
        if 'auto_monitor_requests.py' in result.stdout:
            print("‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º PID
            lines = result.stdout.split('\n')
            for line in lines:
                if 'auto_monitor_requests.py' in line and 'grep' not in line:
                    parts = line.split()
                    if len(parts) > 1:
                        pid = parts[1]
                        print(f"üìä PID: {pid}")
                        break
            
            choice = input("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–π? (y/n): ").strip().lower()
            if choice == 'y':
                subprocess.run(['pkill', '-f', 'auto_monitor_requests.py'])
                print("üõë –°—Ç–∞—Ä—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                time.sleep(2)
            else:
                print("‚ùå –ó–∞–ø—É—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω")
                return
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    print("ü§ñ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å nohup –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ñ–æ–Ω–µ
        process = subprocess.Popen([
            'nohup', 'python', 'auto_monitor_requests.py'
        ], stdout=open('monitoring.log', 'w'), stderr=subprocess.STDOUT)
        
        print(f"‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω!")
        print(f"üìä PID: {process.pid}")
        print(f"üìù –õ–æ–≥: monitoring.log")
        print(f"üìÖ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
        
        print(f"\nüìã –ß–¢–û –î–ï–õ–ê–ï–¢ –ú–û–ù–ò–¢–û–†–ò–ù–ì:")
        print(f"  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞")
        print(f"  ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–æ–≥–¥–∞ –¥–∞—Ç–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω–∞")
        print(f"  ‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö")
        
        print(f"\nüîç –ö–û–ú–ê–ù–î–´ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø:")
        print(f"  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: ps aux | grep auto_monitor_requests")
        print(f"  ‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥: tail -f monitoring.log")
        print(f"  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: pkill -f auto_monitor_requests.py")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == "__main__":
    start_monitoring()
