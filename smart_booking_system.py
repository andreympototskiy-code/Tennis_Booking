#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
"""

import sys
import os
import json
from datetime import datetime, timedelta
import time

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, '/root/tennis-monitor')

from corrected_30min_analyzer import Corrected30MinAnalyzer
from simple_auto_booking import SimpleAutoBooking

class SmartBookingSystem:
    def __init__(self):
        self.analyzer = Corrected30MinAnalyzer()
        self.booking = SimpleAutoBooking()
        self.booking_requests_file = "booking_requests.json"
        
    def load_booking_requests(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        try:
            if os.path.exists(self.booking_requests_file):
                with open(self.booking_requests_file, 'r', encoding='utf-8') as f:
                    return json.load(f)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤: {e}")
        return []
    
    def save_booking_requests(self, requests):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
        try:
            with open(self.booking_requests_file, 'w', encoding='utf-8') as f:
                json.dump(requests, f, ensure_ascii=False, indent=2)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤: {e}")
    
    def add_booking_request(self, date, time_from, duration_hours, description=""):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        requests = self.load_booking_requests()
        
        new_request = {
            'id': len(requests) + 1,
            'date': date,
            'time_from': time_from,
            'duration_hours': duration_hours,
            'description': description,
            'status': 'pending',
            'created_at': datetime.now().isoformat(),
            'last_check': None,
            'attempts': 0
        }
        
        requests.append(new_request)
        self.save_booking_requests(requests)
        
        print(f"‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω:")
        print(f"  üìÖ –î–∞—Ç–∞: {date}")
        print(f"  ‚è∞ –í—Ä–µ–º—è: {time_from}:00-{(time_from + duration_hours) % 24}:00")
        print(f"  üìù –û–ø–∏—Å–∞–Ω–∏–µ: {description}")
        
        return new_request['id']
    
    def is_date_available(self, date):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–∞—Ç—ã (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 7 –¥–Ω–µ–π)"""
        try:
            free_courts = self.analyzer.analyze_ground_courts_22h_corrected(date)
            return free_courts is not None and len(free_courts) > 0
        except:
            return False
    
    def process_booking_request(self, request):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        date = request['date']
        time_from = request['time_from']
        duration_hours = request['duration_hours']
        
        print(f"\nüîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ #{request['id']}: {date} –≤ {time_from}:00")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        request['last_check'] = datetime.now().isoformat()
        request['attempts'] += 1
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–∞—Ç—ã
        if not self.is_date_available(date):
            print(f"  ‚è≥ –î–∞—Ç–∞ {date} –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–±–æ–ª—å—à–µ 7 –¥–Ω–µ–π)")
            request['status'] = 'waiting'
            return False, "–î–∞—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        
        print(f"  ‚úÖ –î–∞—Ç–∞ {date} –¥–æ—Å—Ç—É–ø–Ω–∞, –∏—â–µ–º —Å–≤–æ–±–æ–¥–Ω—ã–µ –∫–æ—Ä—Ç—ã...")
        
        # –ò—â–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ—Ä—Ç—ã
        free_courts = self.analyzer.analyze_ground_courts_22h_corrected(date)
        
        if not free_courts:
            print(f"  ‚ùå –°–≤–æ–±–æ–¥–Ω—ã—Ö –∫–æ—Ä—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            request['status'] = 'failed'
            return False, "–°–≤–æ–±–æ–¥–Ω—ã—Ö –∫–æ—Ä—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        
        # –ò—â–µ–º –∫–æ—Ä—Ç —Å –Ω—É–∂–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
        target_duration = f"{time_from:02d}:00-{(time_from + duration_hours) % 24:02d}:00"
        target_court = None
        
        for court in free_courts:
            if court['time_display'] == target_duration:
                target_court = court
                break
        
        if not target_court:
            print(f"  ‚ö†Ô∏è –ö–æ—Ä—Ç —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é {target_duration} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            request['status'] = 'failed'
            return False, f"–ö–æ—Ä—Ç —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é {target_duration} –Ω–µ –Ω–∞–π–¥–µ–Ω"
        
        print(f"  üéØ –ù–∞–π–¥–µ–Ω –∫–æ—Ä—Ç ‚Ññ{target_court['court_number']}")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        print(f"  ü§ñ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...")
        success, message = self.booking.auto_book_court(
            date=date,
            time_from=time_from,
            duration_hours=duration_hours,
            simulation=False  # –†–µ–∞–ª—å–Ω–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        )
        
        if success:
            print(f"  ‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            request['status'] = 'completed'
            request['result'] = message
            return True, message
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {message}")
            request['status'] = 'failed'
            request['error'] = message
            return False, message
    
    def check_and_process_requests(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
        requests = self.load_booking_requests()
        
        if not requests:
            print("üìã –û—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç")
            return
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(requests)} –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
        
        for request in requests:
            if request['status'] in ['pending', 'waiting']:
                success, message = self.process_booking_request(request)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
                self.save_booking_requests(requests)
                
                if success:
                    print(f"üéâ –ó–∞–ø—Ä–æ—Å #{request['id']} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                else:
                    print(f"‚ö†Ô∏è –ó–∞–ø—Ä–æ—Å #{request['id']}: {message}")
    
    def show_requests_status(self):
        """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
        requests = self.load_booking_requests()
        
        if not requests:
            print("üìã –ó–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—Ç")
            return
        
        print(f"üìã –°–¢–ê–¢–£–° –ó–ê–ü–†–û–°–û–í –ù–ê –ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï ({len(requests)} —à—Ç.)")
        print("=" * 70)
        
        for request in requests:
            status_emoji = {
                'pending': '‚è≥',
                'waiting': 'üïê', 
                'completed': '‚úÖ',
                'failed': '‚ùå'
            }.get(request['status'], '‚ùì')
            
            print(f"{status_emoji} #{request['id']} | {request['date']} | {request['time_from']}:00-{(request['time_from'] + request['duration_hours']) % 24}:00")
            print(f"    –°—Ç–∞—Ç—É—Å: {request['status']} | –ü–æ–ø—ã—Ç–æ–∫: {request['attempts']}")
            
            if request['status'] == 'completed' and 'result' in request:
                print(f"    –†–µ–∑—É–ª—å—Ç–∞—Ç: {request['result']}")
            elif request['status'] == 'failed' and 'error' in request:
                print(f"    –û—à–∏–±–∫–∞: {request['error']}")
            
            if request['last_check']:
                last_check = datetime.fromisoformat(request['last_check'])
                print(f"    –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {last_check.strftime('%d.%m.%Y %H:%M')}")
            
            print()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéæ –£–ú–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    system = SmartBookingSystem()
    
    while True:
        print("\nüìã –ú–ï–ù–Æ:")
        print("1. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
        print("2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã")
        print("3. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–æ–≤")
        print("4. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ").strip()
        
        if choice == '1':
            print("\nüìÖ –î–û–ë–ê–í–õ–ï–ù–ò–ï –ó–ê–ü–†–û–°–ê –ù–ê –ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï")
            print("-" * 40)
            
            date = input("–î–∞—Ç–∞ (YYYY-MM-DD): ").strip()
            time_from = int(input("–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ (—á–∞—Å, 0-23): "))
            duration_hours = int(input("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—á–∞—Å—ã): "))
            description = input("–û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–∞—Ç—ã
            if system.is_date_available(date):
                print(f"\n‚úÖ –î–∞—Ç–∞ {date} –¥–æ—Å—Ç—É–ø–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...")
                # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                temp_request = {
                    'id': 0,
                    'date': date,
                    'time_from': time_from,
                    'duration_hours': duration_hours,
                    'description': description,
                    'status': 'pending',
                    'created_at': datetime.now().isoformat(),
                    'last_check': None,
                    'attempts': 0
                }
                success, message = system.process_booking_request(temp_request)
                if success:
                    print(f"üéâ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {message}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {message}")
            else:
                print(f"\n‚è≥ –î–∞—Ç–∞ {date} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–±–æ–ª—å—à–µ 7 –¥–Ω–µ–π)")
                request_id = system.add_booking_request(date, time_from, duration_hours, description)
                print(f"üìù –ó–∞–ø—Ä–æ—Å –¥–æ–±–∞–≤–ª–µ–Ω —Å ID #{request_id}")
                print("üîÑ –ó–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –∫–æ–≥–¥–∞ –¥–∞—Ç–∞ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞")
        
        elif choice == '2':
            print("\nüîÑ –ü–†–û–í–ï–†–ö–ê –ò –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–ü–†–û–°–û–í")
            print("-" * 40)
            system.check_and_process_requests()
        
        elif choice == '3':
            system.show_requests_status()
        
        elif choice == '4':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main()
