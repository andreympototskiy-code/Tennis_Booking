#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
"""

import sys
import os
import time
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, '/root/tennis-monitor')

from smart_booking_system import SmartBookingSystem

def auto_monitor_requests():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—Ä–æ—Å–æ–≤"""
    print("ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì –ó–ê–ü–†–û–°–û–í")
    print("=" * 50)
    
    system = SmartBookingSystem()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞
    check_interval = 2 * 60 * 60  # 2 —á–∞—Å–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    
    print(f"üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞")
    print(f"üìÖ –ù–∞—á–∞–ª–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
    print("=" * 50)
    
    while True:
        try:
            current_time = datetime.now()
            print(f"\nüïê {current_time.strftime('%d.%m.%Y %H:%M:%S')} - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤...")
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã
            requests = system.load_booking_requests()
            pending_requests = [r for r in requests if r['status'] in ['pending', 'waiting']]
            
            if pending_requests:
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(pending_requests)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
                system.check_and_process_requests()
            else:
                print("üìã –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            completed = len([r for r in requests if r['status'] == 'completed'])
            failed = len([r for r in requests if r['status'] == 'failed'])
            waiting = len([r for r in requests if r['status'] in ['pending', 'waiting']])
            
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ‚úÖ {completed} | ‚ùå {failed} | ‚è≥ {waiting}")
            
            # –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            next_check = current_time + timedelta(seconds=check_interval)
            print(f"‚è∞ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {next_check.strftime('%d.%m.%Y %H:%M:%S')}")
            
            # –ñ–¥–µ–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            time.sleep(check_interval)
            
        except KeyboardInterrupt:
            print("\n\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            break
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ: {e}")
            print("üîÑ –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç...")
            time.sleep(30 * 60)  # 30 –º–∏–Ω—É—Ç

if __name__ == "__main__":
    auto_monitor_requests()
