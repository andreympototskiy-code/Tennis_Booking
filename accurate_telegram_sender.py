#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–æ—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram –æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–∞—Ö –∑–∞–≤—Ç—Ä–∞ –≤ 22:00
"""

import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from final_monitor import FinalTennisMonitor
from telegram_notifier import TelegramNotifier, get_telegram_config

def send_accurate_notification():
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–∞—Ö –∑–∞–≤—Ç—Ä–∞ –≤ 22:00
    """
    
    print("üéæ –¢–û–ß–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –û –ì–†–£–ù–¢–û–í–´–• –ö–û–†–¢–ê–•")
    print("=" * 60)
    print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Telegram
    config = get_telegram_config()
    if not config:
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–Ω–∏—Ç–æ—Ä –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    monitor = FinalTennisMonitor()
    notifier = TelegramNotifier(config['bot_token'], config['chat_id'])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram
    print("üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram...")
    if not notifier.test_connection():
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram!")
        return False
    
    print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–µ —Å–ª–æ—Ç—ã
    tomorrow = datetime.now() + timedelta(days=1)
    tomorrow_str = tomorrow.strftime('%Y-%m-%d')
    
    print(f"üìÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞: {tomorrow_str}")
    
    try:
        slots = monitor.get_tomorrow_slots()
        
        if not slots:
            print("‚ùå –°–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(slots)} —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –≥—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤ 22:00-23:00
        ground_slots_22h = []
        for slot in slots:
            if ('–ì—Ä—É–Ω—Ç' in slot.get('court_type', '') and 
                slot.get('time_from') == 22 and 
                slot.get('time_to') == 23):
                ground_slots_22h.append(slot)
        
        print(f"üèüÔ∏è –ì—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤ 22:00-23:00: {len(ground_slots_22h)}")
        
        if ground_slots_22h:
            print("\nüìã –°–≤–æ–±–æ–¥–Ω—ã–µ –≥—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã –≤ 22:00-23:00:")
            for i, slot in enumerate(ground_slots_22h, 1):
                print(f"  {i}. –ö–æ—Ä—Ç ‚Ññ{slot['court_number']} - {slot['court_type']}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            print("\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram...")
            
            success = notifier.send_tennis_slots_notification(
                slots=slots,
                date=tomorrow_str,
                court_type="–ì—Ä—É–Ω—Ç",
                time_filter="22"
            )
            
            if success:
                print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!")
                print(f"üìä –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {len(ground_slots_22h)} —Å–≤–æ–±–æ–¥–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–∞—Ö")
                return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
                return False
                
        else:
            print("‚ùå –°–≤–æ–±–æ–¥–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤ –≤ 22:00-23:00 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
            print("\nüîç –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–´:")
            
            # –í—Å–µ –≥—Ä—É–Ω—Ç–æ–≤—ã–µ –∫–æ—Ä—Ç—ã
            ground_slots = [slot for slot in slots if '–ì—Ä—É–Ω—Ç' in slot.get('court_type', '')]
            print(f"üèüÔ∏è –í—Å–µ–≥–æ –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤: {len(ground_slots)}")
            
            # –ë–ª–∏–∂–∞–π—à–∏–µ –≤–µ—á–µ—Ä–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∞
            evening_times = [20, 21, 23]
            print("\nüåÖ –ë–ª–∏–∂–∞–π—à–∏–µ –≤–µ—á–µ—Ä–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∞:")
            for time_slot in evening_times:
                evening_slots = [slot for slot in ground_slots 
                               if slot.get('time_from') == time_slot]
                if evening_slots:
                    print(f"  ‚è∞ {time_slot}:00-{time_slot+1}:00 - {len(evening_slots)} –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Å–ª–æ—Ç–æ–≤ –Ω–µ—Ç
            message = f"‚ùå –°–≤–æ–±–æ–¥–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤ –≤ 22:00-23:00 –Ω–∞ {tomorrow_str} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n\n"
            message += "üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã:\n"
            for time_slot in evening_times:
                evening_slots = [slot for slot in ground_slots 
                               if slot.get('time_from') == time_slot]
                if evening_slots:
                    message += f"‚è∞ {time_slot}:00-{time_slot+1}:00 - {len(evening_slots)} –∫–æ—Ä—Ç–æ–≤\n"
            
            message += "\nüîó –ü—Ä–æ–≤–µ—Ä–∏—Ç—å: https://x19.spb.ru/bronirovanie/"
            
            success = notifier.send_message(message)
            if success:
                print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–ª–æ—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
                return False
            
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üéæ –¢–æ—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–∞—Ö")
    print("=" * 50)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–∞—Ö –∑–∞–≤—Ç—Ä–∞ –≤ 22:00")
        print("2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏")
        print("3. –¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram")
        print("4. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
        
        if choice == "1":
            send_accurate_notification()
            
        elif choice == "2":
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏
            monitor = FinalTennisMonitor()
            tomorrow = (datetime.now() + timedelta(days=1)).strftime('%Y-%m-%d')
            
            print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∑–∞–≤—Ç—Ä–∞: {tomorrow}")
            
            slots = monitor.get_tomorrow_slots()
            if slots:
                ground_slots_22h = [slot for slot in slots 
                                  if ('–ì—Ä—É–Ω—Ç' in slot.get('court_type', '') and 
                                      slot.get('time_from') == 22 and 
                                      slot.get('time_to') == 23)]
                
                print(f"‚úÖ –í—Å–µ–≥–æ —Å–ª–æ—Ç–æ–≤: {len(slots)}")
                print(f"üèüÔ∏è –ì—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤ –≤ 22:00-23:00: {len(ground_slots_22h)}")
                
                if ground_slots_22h:
                    print("\nüìã –°–≤–æ–±–æ–¥–Ω—ã–µ –∫–æ—Ä—Ç—ã:")
                    for slot in ground_slots_22h:
                        print(f"  ‚Ä¢ –ö–æ—Ä—Ç ‚Ññ{slot['court_number']}")
                else:
                    print("‚ùå –°–≤–æ–±–æ–¥–Ω—ã—Ö –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö –∫–æ—Ä—Ç–æ–≤ –≤ 22:00-23:00 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            else:
                print("‚ùå –°–ª–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
        elif choice == "3":
            config = get_telegram_config()
            if config:
                notifier = TelegramNotifier(config['bot_token'], config['chat_id'])
                if notifier.test_connection():
                    print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram")
            else:
                print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
        elif choice == "4":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nüõë –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
